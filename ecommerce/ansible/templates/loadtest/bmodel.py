import random
import math
import time
from collections import deque
import logging

from locust import LoadTestShape

#! RUNTIME PARAMETERS
MIN_SPAWN_RATE = 50

SECONDS_PER_MINUTE = 60
TEST_TIME_IN_MINS = 10
PERIOD_PER_BMODEL_TICK_SECS = 30

#! Generated via generate_profile.py script under root/loadtest/ folder. Will be uploaded to EC2 VM.
EXTENDED_TARGET_USER_PROFILE = [366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 2092, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 875, 875, 875, 875, 875, 875, 875, 875, 875, 875, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 366, 366, 366, 366, 366, 366, 366, 366, 366, 366, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
PROFILE_TOTAL_DURATION_SECONDS = len(EXTENDED_TARGET_USER_PROFILE)

class BModelShape(LoadTestShape):
    """
    A Locust custom load shape that consumes a pre-generated, stretched
    user profile where each original b-model point is held for a specific duration.
    """
    
    time_limit = PROFILE_TOTAL_DURATION_SECONDS
    spawn_rate = MIN_SPAWN_RATE

    user_profile = EXTENDED_TARGET_USER_PROFILE

    def tick(self):
        run_time = int(self.get_run_time())

        if run_time >= self.time_limit:
            return None
        
        try:
            target_users = self.user_profile[run_time]

            # Dynamic spawn rate to reach target faster in burst periods
            current_users = self.get_current_user_count()
            spawn_rate = max(MIN_SPAWN_RATE, abs(target_users - current_users))

            return (target_users, spawn_rate)
        except IndexError:
            logging.warning(f"Run time {run_time} exceeded profile length {len(self.user_profile_per_second)}. Stopping.")
            return None
        except Exception as e:
            logging.error(f"Error in BModelShape tick at runtime {run_time}: {e}")
            return None
